# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/
apiVersion: apps/v1
kind: Deployment

metadata:
  name: bd-deployment
  namespace: default

# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/#DeploymentSpec
spec:
  replicas: 1

  # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
  # https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/label-selector/#LabelSelector
  selector:
    matchLabels:
      name: bd-pod

  # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-template-v1/#PodTemplate
  template:

    # https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/object-meta/#ObjectMeta
    metadata:

      # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      labels: # Todas las etiquetas son privadas, por la falta de prefijo.
        name: bd-pod
        tier: backend

    # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#PodSpec
    spec:

      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Container
      containers:

      - name: bd-container
        image: postgres

        # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables
        #
        # Toma los valores de las variables de entorno del contenedor desde un objeto secreto
        # de Kubernetes.
        envFrom:
        - secretRef:
            name: bd-secrets

        # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes-1
        #
        # Este campo define una lista de volúmenes que se montarán en el sistema de archivos del contenedor,
        # los cuales permitirán que el contenedor acceda a un almacenamiento persistente.
        volumeMounts:

          # Nombre del volumen que se montará en el contenedor (debe  coincidir con el nombre de
          # un volumen definido en la sección spec.volumes).
        - name: bd-storage

          # Ruta dentro del contenedor donde se montará el volumen.
          mountPath: /var/lib/postgresql/data

          # Permite montar un subdirectorio específico del volumen en la ruta especificada
          # en mountPath, en vez de montar todo el contenido del volumen.
          # Permite:
          # - tener datos de varias aplicaciones en el mismo volumen;
          # - poder montar el mismo volumen en diferentes contenedores sin tener que compartir
          # los datos del volumen;
          # - evitar problemas al montar cuando el contenedor requiere un directorio vacío.
          subPath: postgresql-data

      - name: adminer
        image: adminer
        env:

          - name: PORT
            value: "8080"

          - name: ADMINER_DEFAULT_SERVER
            value: localhost

      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#volumes
      volumes:

        # https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/volume/#Volume
        #
        # Nombre del volumen. Debe ser de tipo DNS_LABEL y único dentro del pod.
      - name: bd-storage

        # https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/volume/#exposed-persistent-volumes
        #
        # Especifica las características del objeto Kubernetes que se utilizará como
        # almacenamiento persistente.
        persistentVolumeClaim:

          # Nombre del objeto Kubernetes de tipo PVC que se utilizará como almacenamiento
          # persistente.
          claimName: bd-pvc

      # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling
      #
      # El siguiente código indica que el pod puede ser desplegado en nodos de tipo spot.
      tolerations:
      - key: instance_type
        operator: Equal
        value: spot
        effect: NoSchedule