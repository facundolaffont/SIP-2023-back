# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-backend
  namespace: default

# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/#DeploymentSpec
spec:
  replicas: 1

  # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
  # https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/label-selector/#LabelSelector
  selector:
    matchLabels:
      app: backend

  # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-template-v1/#PodTemplate
  template:

    # https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/object-meta/#ObjectMeta
    metadata:

      # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      labels: # Todas las etiquetas son privadas, por la falta de prefijo.
        app: backend
        tier: backend

    # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#PodSpec
    spec:

      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Container
      containers:
      - name: maestro
        image: facundol/tp2-ej1-maestro:latest
        env:
        - name: "PORT"
          value: "8080"

      #   volumeMounts:
      #   - name: maestro-secret-volume
      #     mountPath: /app/
      #     readOnly: true
      # volumes:
      # - name: maestro-secret-volume
      #   secret:
      #     secretName: maestro-secrets

      # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling
      #
      # El siguiente código indica que el pod puede ser desplegado en nodos de tipo spot.
      tolerations:
      - key: instance_type
        operator: Equal
        value: spot
        effect: NoSchedule

      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling:~:text=affinity
      affinity:

        # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#NodeAffinity
        #
        # El siguiente código permite que el pod sea desplegado en un nodo matcheado por 'matchExpressions'.
        nodeAffinity:

          # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#NodeAffinity:~:text=requiredDuringSchedulingIgnoredDuringExecution
          requiredDuringSchedulingIgnoredDuringExecution:

            # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#NodeAffinity:~:text=requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms
            nodeSelectorTerms:

            # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#NodeAffinity:~:text=requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions
            - matchExpressions:

              # https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/node-selector-requirement/#NodeSelectorRequirement
              - key: team
                operator: In
                values:
                - devops